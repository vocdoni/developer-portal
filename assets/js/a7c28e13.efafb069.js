"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[7862],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),k=r,m=u["".concat(o,".").concat(k)]||u[k]||c[k]||i;return n?a.createElement(m,s(s({ref:t},d),{},{components:n})):a.createElement(m,s({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},51659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={},s="Census Types",l={unversionedId:"sdk/integration-details/census-types/census-types",id:"sdk/integration-details/census-types/census-types",title:"Census Types",description:"A census is a list of voters who are eligible to vote in a given election. There are multiple ways to define a census with Vocdoni, each with different privacy and verifiability considerations. The census types are defined at a protocol level and include on-chain, off-chain Merkle tree, and off-chain Credential Service Provider.",source:"@site/docs/sdk/integration-details/census-types/census-types.md",sourceDirName:"sdk/integration-details/census-types",slug:"/sdk/integration-details/census-types/",permalink:"/sdk/integration-details/census-types/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Integration Details",permalink:"/sdk/integration-details/"},next:{title:"Off-chain Credential Service Provider",permalink:"/sdk/integration-details/census-types/off-chain-csp"}},o={},p=[],d={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"census-types"},"Census Types"),(0,r.kt)("p",null,"A census is a list of voters who are eligible to vote in a given election. There are multiple ways to define a census with Vocdoni, each with different privacy and verifiability considerations. The ",(0,r.kt)("a",{parentName:"p",href:"/protocol/census"},"census types")," are defined at a protocol level and include ",(0,r.kt)("a",{parentName:"p",href:"/sdk/integration-details/census-types/on-chain"},"on-chain"),", ",(0,r.kt)("a",{parentName:"p",href:"/sdk/integration-details/census-types/off-chain-tree"},"off-chain Merkle tree"),", and ",(0,r.kt)("a",{parentName:"p",href:"/sdk/integration-details/census-types/off-chain-csp"},"off-chain Credential Service Provider"),". "),(0,r.kt)("p",null,"The census type is selected from the SDK by using a ",(0,r.kt)("a",{parentName:"p",href:"/sdk/reference/classes/Census"},(0,r.kt)("inlineCode",{parentName:"a"},"census"))," of that type when creating an election. The SDK ",(0,r.kt)("a",{parentName:"p",href:"/sdk/reference/classes/Census#hierarchy"},"census types")," correspond to the three protocol-level census types according to the following table:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"SDK Census Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Protocol Type"),(0,r.kt)("th",{parentName:"tr",align:null},"weighted"),(0,r.kt)("th",{parentName:"tr",align:null},"anonymous"),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"th",href:"/sdk/reference/enums/CensusType"},(0,r.kt)("inlineCode",{parentName:"a"},"CensusType"))),(0,r.kt)("th",{parentName:"tr",align:null}))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/CSPCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"CSPCensus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Off-chain CSP"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"optional"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CSP")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/PublishedCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"PublishedCensus"))," -> ",(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/TokenCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenCensus"))),(0,r.kt)("td",{parentName:"tr",align:null},"On-chain"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"WEIGHTED")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/PublishedCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"PublishedCensus"))," -> ",(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/TokenCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenCensus"))),(0,r.kt)("td",{parentName:"tr",align:null},"On-chain"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ANONYMOUS")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/OffchainCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"OffchainCensus"))," -> ",(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/PlainCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"PlainCensus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Off-chain tree"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"WEIGHTED")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/OffchainCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"OffchainCensus"))," -> ",(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/PlainCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"PlainCensus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Off-chain tree"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"WEIGHTED")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/OffchainCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"OffchainCensus"))," -> ",(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/WeightedCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"WeightedCensus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Off-chain tree"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ANONYMOUS")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/OffchainCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"OffchainCensus"))," -> ",(0,r.kt)("a",{parentName:"td",href:"/sdk/reference/classes/WeightedCensus"},(0,r.kt)("inlineCode",{parentName:"a"},"WeightedCensus"))),(0,r.kt)("td",{parentName:"tr",align:null},"Off-chain tree"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ANONYMOUS")),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"A weighted census is one where some voters' votes have more power than others, set by a ",(0,r.kt)("inlineCode",{parentName:"p"},"weight")," value. ",(0,r.kt)("inlineCode",{parentName:"p"},"PlainCensus")," is described by a ",(0,r.kt)("inlineCode",{parentName:"p"},"WEIGHTED")," ",(0,r.kt)("inlineCode",{parentName:"p"},"CensusType")," because it technically is a weighted census, with every weight set to ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),".")))}c.isMDXComponent=!0}}]);