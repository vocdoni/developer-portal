"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[48],{45889:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>i,contentTitle:()=>s,default:()=>o,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var n=a(87462),r=(a(67294),a(3905));const l={custom_edit_url:null},s=void 0,c={unversionedId:"sdk/Asymmetric",id:"sdk/Asymmetric",title:"Asymmetric",description:"Methods",source:"@site/docs/sdk/Asymmetric.mdx",sourceDirName:"sdk",slug:"/sdk/Asymmetric",permalink:"/sdk/Asymmetric",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"sdk",previous:{title:"Vote",permalink:"/sdk/Vote"},next:{title:"Signing",permalink:"/sdk/Signing"}},i={},d=[{value:"constructor",id:"constructor",level:2},{value:"Methods",id:"methods",level:2},{value:"encryptRaw",id:"encryptRaw",level:3}],m={toc:d};function o(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"class Asymmetric\n")),(0,r.kt)("div",null),(0,r.kt)("div",{className:"container"},(0,r.kt)("div",{className:"row mb-2"},(0,r.kt)("div",{className:"col col--12"},(0,r.kt)("strong",null,"Methods"))),(0,r.kt)("div",{className:"row"},(0,r.kt)("div",{className:"col col--12"},(0,r.kt)("a",{href:"#encryptRaw"},"encryptRaw"),(0,r.kt)("span",{className:"badge badge--info margin-left--sm"},"static")))),(0,r.kt)("h2",{id:"constructor"},"constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"new Asymmetric()\n")),(0,r.kt)("div",null),(0,r.kt)("p",null,"Cannot be constructed."),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"encryptRaw"},"encryptRaw"),(0,r.kt)("div",null,(0,r.kt)("span",{className:"badge badge--info"},"static")),(0,r.kt)("p",null,"Encrypts the given buffer with NaCl SealedBox using the given hex public key.",(0,r.kt)("br",null),"Returns a buffer with the encrypted payload."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns"),": Buffer"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"PARAMETER"),(0,r.kt)("th",{parentName:"tr",align:"center"},"TYPE"),(0,r.kt)("th",{parentName:"tr",align:"center"},"OPTIONAL"),(0,r.kt)("th",{parentName:"tr",align:"center"},"DEFAULT"),(0,r.kt)("th",{parentName:"tr",align:"center"},"DESCRIPTION"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"messageBytes"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Uint8Array"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"The payload to encrypt")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"hexPublicKey"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"}),(0,r.kt)("td",{parentName:"tr",align:"center"},"32 byte public key in hex format")))))}o.isMDXComponent=!0}}]);