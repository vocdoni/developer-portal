"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[2428],{3905:(e,n,t)=>{t.d(n,{Zo:()=>h,kt:()=>d});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),u=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},h=function(e){var n=u(e.components);return o.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),p=u(t),d=r,f=p["".concat(c,".").concat(d)]||p[d]||l[d]||s;return t?o.createElement(f,a(a({ref:n},h),{},{components:t})):o.createElement(f,a({ref:n},h))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,a=new Array(s);a[0]=p;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var u=2;u<s;u++)a[u]=t[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},49986:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var o=t(87462),r=(t(67294),t(3905));const s={},a="On-Chain Census",i={unversionedId:"protocol/census/on-chain/on-chain",id:"protocol/census/on-chain/on-chain",title:"On-Chain Census",description:"An on-chain census is one which is dependent on the status of the Ethereum blockchain at a given point in time. This census type enables the set of eligible voters to be derived from the token holder balances for some ERC-20 Ethereum token, weighted according to token balances. The ideal use-case for such a census is an organization whose members are represented as holders of some token, such as a DAO.",source:"@site/docs/protocol/census/on-chain/on-chain.md",sourceDirName:"protocol/census/on-chain",slug:"/protocol/census/on-chain/",permalink:"/protocol/census/on-chain/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Off-Chain Tree Census",permalink:"/protocol/census/off-chain-tree"},next:{title:"Census3 Service",permalink:"/protocol/census/on-chain/census3"}},c={},u=[{value:"Census3 Service",id:"census3-service",level:2},{value:"ERC-20 Token Storage Proofs",id:"erc-20-token-storage-proofs",level:2}],h={toc:u};function l(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,o.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"on-chain-census"},"On-Chain Census"),(0,r.kt)("p",null,"An on-chain census is one which is dependent on the status of the Ethereum blockchain at a given point in time. This census type enables the set of eligible voters to be derived from the token holder balances for some ERC-20 Ethereum token, weighted according to token balances. The ideal use-case for such a census is an organization whose members are represented as holders of some token, such as a ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Decentralized_autonomous_organization"},"DAO"),"."),(0,r.kt)("p",null,"There are two ways with Vocdoni to create an on-chain census: Ethereum Storage Proofs and the Census3 service. Ethereum Storage Proofs is the legacy method which requires a higher setup cost and more manual work by integrators. The Census3 Service provided by Vocdoni abstracts this complexity away and exposes an API to create and access token-holder censuses. "),(0,r.kt)("h2",{id:"census3-service"},"Census3 Service"),(0,r.kt)("p",null,"The Census3 Service is an API service which provides an easy way to create censuses for elections with holders of a single token or a combination of them. This is a wrapper of the on-chain census design and enables integrators to use on-chain censuses without manually registering tokens or generating storage proofs."),(0,r.kt)("p",null,"The Census3 Service is documented in-depth ",(0,r.kt)("a",{parentName:"p",href:"/protocol/census/on-chain/census3"},"here"),"."),(0,r.kt)("h2",{id:"erc-20-token-storage-proofs"},"ERC-20 Token Storage Proofs"),(0,r.kt)("admonition",{title:"deprecated: ERC-20 Token Storage Proofs",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"The solution for on-chain censuses used to be based on the use of ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/storage-proofs-eth-go"},"ERC-20 Token Storage Proofs"),". We have since created the Census3 Service, which is the preferred method for creating token-based censuses, but the use of Token Storage Proofs is still possible. ")),(0,r.kt)("p",null,"An Ethereum Storage Proof is a way to create an on-chain census without the use of the Census3 Service. This approach uses a Token Storage Proof Smart Contract to generate a proof of a given token's holders which can then be used directly as a census."),(0,r.kt)("p",null,"The Storage Proofs protocol is no longer maintained or recommended, but is still theoretically usable and is documented in-depth ",(0,r.kt)("a",{parentName:"p",href:"/protocol/census/on-chain/eth-storage-proofs"},"here"),"."))}l.isMDXComponent=!0}}]);