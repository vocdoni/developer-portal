"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[3215],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return t?o.createElement(h,r(r({ref:n},p),{},{components:t})):o.createElement(h,r({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<i;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},65846:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=t(87462),a=(t(67294),t(3905));const i={},r="UI Components",s={unversionedId:"ui-components/index",id:"ui-components/index",title:"UI Components",description:"The UI Components library is a set of react providers and components that abstract away the SDK and enable easy client usage of Vocdoni functionality.",source:"@site/docs/ui-components/index.mdx",sourceDirName:"ui-components",slug:"/ui-components/",permalink:"/ui-components/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Exports the indexer database",permalink:"/vocdoni-api/exports-the-indexer-database"},next:{title:"Account Components",permalink:"/ui-components/account"}},l={},c=[{value:"Installing",id:"installing",level:2},{value:"Usage",id:"usage",level:2},{value:"Theming",id:"theming",level:2},{value:"Theming components",id:"theming-components",level:3},{value:"Styling via props",id:"styling-via-props",level:4},{value:"Theming complex multipart components",id:"theming-complex-multipart-components",level:4},{value:"i18n",id:"i18n",level:3},{value:"LICENSE",id:"license",level:2}],p={toc:c};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ui-components"},"UI Components"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/ui-components"},"UI Components")," library is a set of react providers and components that abstract away the SDK and enable easy client usage of Vocdoni functionality. "),(0,a.kt)("admonition",{title:"examples",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You can see examples of the ",(0,a.kt)("a",{parentName:"p",href:"/ui-components/account"},"account"),", ",(0,a.kt)("a",{parentName:"p",href:"/ui-components/election"},"election"),", ",(0,a.kt)("a",{parentName:"p",href:"/ui-components/layout"},"layout"),", and ",(0,a.kt)("a",{parentName:"p",href:"/ui-components/organization"},"organization")," components, as well as the ",(0,a.kt)("a",{parentName:"p",href:"/ui-components/react-providers"},"react providers"),", in the sub-pages of this section."),(0,a.kt)("p",{parentName:"admonition"},"These examples use ",(0,a.kt)("a",{parentName:"p",href:"https://mswjs.io/"},"mock-service-workers")," to mock API responses in order to show how components would function in a real election where the client is an eligible voter. ")),(0,a.kt)("h2",{id:"installing"},"Installing"),(0,a.kt)("p",null,"You'll first need to have a project with chakra installed and configured. Follow\ntheir ",(0,a.kt)("a",{parentName:"p",href:"https://chakra-ui.com/getting-started"},"official documentation")," in order to do so."),(0,a.kt)("p",null,"After that, you can add the required vocdoni components dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @vocdoni/sdk @vocdoni/chakra-components react-markdown remark-gfm\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"The very first step is to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"<ClientProvider />")," as a wrapper of your\napplication or your election components. The ",(0,a.kt)("inlineCode",{parentName:"p"},"signer")," is the wallet belonging to the organization or voter you with to use to interact with elections. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ClientProvider } from '@vocdoni/chakra-components'\n\nconst App = () => {\n  const signer = /* any ethers based signer */\n  return (\n    <ClientProvider env='stg' signer={signer}>\n      {/* your actual app code */}\n    </ClientProvider>\n  )\n}\n")),(0,a.kt)("p",null,"Note ",(0,a.kt)("inlineCode",{parentName:"p"},"env")," can be any of the ",(0,a.kt)("a",{parentName:"p",href:"/sdk/integration-details#environment"},"Vocdoni Environments"),", either in string format or using the SDK ",(0,a.kt)("inlineCode",{parentName:"p"},"EnvOptions")," enum."),(0,a.kt)("p",null,"After that, the easiest way to integrate a voting process would be to just import the\n",(0,a.kt)("inlineCode",{parentName:"p"},"Election")," component and specify an election id:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Election } from '@vocdoni/chakra-components'\n\nconst CustomVoteComponent = () => {\n  return <Election id='your-election-id' />\n}\n")),(0,a.kt)("p",null,"This will automatically instantiate the Election Provider with all the available voting components. You can style it following the ",(0,a.kt)("a",{parentName:"p",href:"#theming"},"theming instructions"),". You can also create your own vote view, based on the components used by the ",(0,a.kt)("inlineCode",{parentName:"p"},"Election")," component, and style it directly with props:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import {\n  ElectionProvider,\n  ElectionTitle,\n  ElectionSchedule,\n  ElectionStatusBadge,\n  ElectionDescription,\n  HR,\n  ElectionQuestions,\n} from '@vocdoni/chakra-components'\n\nconst CustomVoteComponent = () => {\n  return (\n    <ElectionProvider id='your-election-id' fetchCensus={true}>\n      <ElectionHeader />\n      <ElectionTitle\n        p={5}\n        mt={6}\n        mb={8}\n        textColor='red'\n      />\n      <ElectionSchedule textTransform='uppercase' />\n      <ElectionStatusBadge variant='solid' colorScheme='teal' />\n      <ElectionDescription fontFamily='monospace' />\n      <HR />\n      <ElectionQuestions />\n    </ElectionProvider>\n  )\n}\n")),(0,a.kt)("h2",{id:"theming"},"Theming"),(0,a.kt)("p",null,"Since these components use chakra's theming system, they can be styled in the same way as ",(0,a.kt)("a",{parentName:"p",href:"https://chakra-ui.com/docs/styled-system/customize-theme#customizing-component-styles"},"described in the Chakra documentation"),", but using the custom theme components we defined (see ",(0,a.kt)("a",{parentName:"p",href:"#theming-components"},"theming components")," for more details)."),(0,a.kt)("p",null,"In order to start styling the voting components, you should use the ",(0,a.kt)("inlineCode",{parentName:"p"},"ChakraProvider"),", and customize the theme:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// this can be imported from '@chakra-ui/react' too, but that's more generic\nimport { extendTheme } from '@chakra-ui/system'\nimport { theme } from '@vocdoni/chakra-components'\n\nexport const App = () => (\n  <ChakraProvider theme={extendTheme(theme)}>\n    {/* YOUR APP CONTENTS */}\n  </ChakraProvider>\n)\n")),(0,a.kt)("p",null,"As you can see, we're importing a custom defined theme from ",(0,a.kt)("inlineCode",{parentName:"p"},"@vocdoni/chakra-components"),", but at the same time, we're using ",(0,a.kt)("inlineCode",{parentName:"p"},"extendTheme"),". This is in order to avoid using base chakra theme, both to avoid a bigger bundle size and to ensure we don't unexpectedly overwrite styles."),(0,a.kt)("p",null,"The above example is the easiest way to get all the default styles up and running, but you can always define your own entire theme and ignore our base styles.\nThe ","[components structure]"," section describes how our components are styled with more granular detail."),(0,a.kt)("p",null,"In case you want to add the voting components to a page and ensure chakra-ui will not affect your existing theme, you may need to pass ",(0,a.kt)("inlineCode",{parentName:"p"},"resetCSS={false}")," as a component prop: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { extendTheme } from '@chakra-ui/system'\nimport { theme } from '@vocdoni/chakra-components'\n\nexport const App = () => (\n  <ChakraProvider resetCSS={false} theme={extendTheme(theme)}>\n    {/* YOUR APP CONTENTS */}\n  </ChakraProvider>\n)\n")),(0,a.kt)("p",null,"If you want to extend or change the theme, you can pass your changes as a second\nargument to ",(0,a.kt)("inlineCode",{parentName:"p"},"extendTheme"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { extendTheme } from '@chakra-ui/react'\nimport { theme as vtheme } from '@vocdoni/chakra-components'\n\nconst theme = extendTheme(vtheme, {\n  // any theme changes would go here\n  components: {\n    // [...]\n  },\n})\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    {/* YOUR APP CONTENTS */}\n  </ChakraProvider>\n)\n")),(0,a.kt)("p",null,"You can perfectly ignore our styles and write them from the ground up."),(0,a.kt)("h3",{id:"theming-components"},"Theming components"),(0,a.kt)("p",null,"For each of the election components we provide, you can follow the official Chakra documentation on how to customize component styles."),(0,a.kt)("p",null,"Here's a small example of custom theme for the title and image of an election:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { extendTheme, ComponentSingleStyleConfig } from '@chakra-ui/react'\nimport { theme as vtheme } from '@vocdoni/chakra-components'\n\nconst ElectionTitle : ComponentsStyleConfig = {\n  baseStyle: {\n    paddingTop: '.5em',\n    position: 'relative',\n    marginTop: '-2.5em',\n    background: 'linear-gradient(180deg, rgba(0,0,0,0.50) 0%, rgba(255,255,255,0) 100%)',\n  }\n}\n\nconst ElectionHeader : ComponentsStyleConfig = {\n  baseStyle: {\n    minHeight: '3em'\n  }\n}\n\nconst theme = extendTheme(vtheme, {\n  components: {\n    ElectionTitle,\n    ElectionHeader,\n  },\n})\n\n// this theme would then be used directly in your ChakraProvider instance\nexport default theme\n")),(0,a.kt)("h4",{id:"styling-via-props"},"Styling via props"),(0,a.kt)("p",null,"All components have all the features you would expect from a chakra component,\nmeaning you can style all components via component props too:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"live",live:!0},'  <ElectionProvider id=\'4ae20a8eb4caa2f2508be2538decb9648bd9fab41f1d5a549a42020000000000\'>\n    <ElectionHeader\n      borderRadius="full"\n      boxSize="100px"\n\n      src="https://picsum.photos/200"\n      alt="random image"\n    />\n    <ElectionTitle\n      as=\'h2\'\n      fontSize=\'50px\'\n    />\n  </ElectionProvider>\n')),(0,a.kt)("p",null,"You can also use component props much more extensively. For example, here is a more attractive organization pane styled with props:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"<p>\n<OrganizationHeader/>\n<Flex\n      flexDirection={{ base: 'column', lg: 'row' }}\n      alignItems={{ base: 'center', lg: 'start' }}\n      gap={{ base: 2, lg: 8 }}\n      mb={10}\n      pt={10}\n    >\n      <Box flex='1 1 10%' minW={40}>\n        <AspectRatio ratio={1.25 / 1} maxW={56}>\n          <OrganizationAvatar\n            mx='auto'\n          />\n        </AspectRatio>\n      </Box>\n\n      <Flex\n        flex='1 1 80%'\n        justifyContent='space-between'\n        alignItems={{ base: 'center', lg: 'start' }}\n        flexDirection={{ base: 'column', lg: 'row' }}\n        gap={{ base: 2 }}\n        minW={0}\n        maxW='100%'\n      >\n        <Flex\n          flex='1 1 100%'\n          direction='column'\n          justifyContent={{ lg: 'space-between' }}\n          alignItems={{ base: 'center', lg: 'start' }}\n          gap={2}\n          order={{ base: 2, lg: 0 }}\n        >\n          <Flex\n            w='100%'\n            flexDirection='row'\n            justifyContent='space-between'\n            alignItems='center'\n            sx={{\n              p: {\n                noOfLines: 'none',\n                overflow: 'hidden',\n                display: '-webkit-box',\n                WebkitBoxOrient: 'vertical',\n                WebkitLineClamp: 'var(--chakra-line-clamp)',\n              },\n            }}\n          >\n            <OrganizationName\n              as='p'\n              fontSize={32}\n              lineHeight={1.5}\n              maxW={{ base: '250px', sm: '300px', sm2: '350px', md: '450px', lg: '370px', lg2: '500px', xl: '650px' }}\n            />\n          </Flex>\n            <OrganizationDescription fontSize='lg' lineHeight={1.7} />\n        </Flex>\n      </Flex>\n    </Flex>\n</p>\n")),(0,a.kt)("h4",{id:"theming-complex-multipart-components"},"Theming complex multipart components"),(0,a.kt)("p",null,"Some components, like ",(0,a.kt)("inlineCode",{parentName:"p"},"ElectionQuestions"),", follow a multipart component structure. Please refer to the ",(0,a.kt)("a",{parentName:"p",href:"https://chakra-ui.com/docs/styled-system/component-style#styling-multipart-components"},"official chakra documentation")," for more info on how to style this type of component."),(0,a.kt)("p",null,"Here's a small example of styling the ",(0,a.kt)("inlineCode",{parentName:"p"},"ElectionQuestions")," component:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { extendTheme, createMultiStyleConfigHelpers } from '@chakra-ui/react'\nimport { theme as vtheme, questionsAnatomy } from '@vocdoni/chakra-components'\n\nconst { defineMultiStyleConfig, definePartsStyle } = createMultiStyleConfigHelpers(questionsAnatomy)\n\nconst ElectionQuestions = defineMultiStyleConfig({\n  baseStyle: definePartsStyle({\n    title: {\n      color: 'lightblue',\n    },\n    description: {\n      color: 'lightgreen',\n    }\n  }),\n})\n\nconst theme = extendTheme(vtheme, {\n  components: {\n    ElectionQuestions,\n  },\n})\n\n// this theme would then be used directly in your ChakraProvider instance\nexport default theme\n")),(0,a.kt)("p",null,"You can check out each component's anatomy by checking\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/ui-components/tree/main/templates/chakra/src/theme"},"their theme files"),"."),(0,a.kt)("h3",{id:"i18n"},"i18n"),(0,a.kt)("p",null,"In order to change any of the texts contained in ",(0,a.kt)("inlineCode",{parentName:"p"},"@vocdoni/chakra-components"),",\nyou must specify the translations for each language in the ClientProvider:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const translationsObject = {\n  en: {\n    // all english translations\n  },\n  ca: {\n    // catalan translations\n  }\n}\n<ClientProvider translations={translationsObject} />\n")),(0,a.kt)("p",null,"Check out the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/ui-components/blob/main/packages/react-providers/src/i18n/localize.tsx"},"translations file")," in order to see all the available keys."),(0,a.kt)("h2",{id:"license"},"LICENSE"),(0,a.kt)("p",null,"This components library is licensed under the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/ui-components/blob/main/LICENSE"},"GNU Affero General Public License\nv3.0"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Vocdoni UI React Components\nCopyright (C) 2023 Vocdoni Roots MCU\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n")))}m.isMDXComponent=!0}}]);