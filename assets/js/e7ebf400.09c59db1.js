"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[2226],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>d});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=a,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||r;return t?o.createElement(h,i(i({ref:n},p),{},{components:t})):o.createElement(h,i({ref:n},p))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=t[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},95909:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=t(87462),a=(t(67294),t(3905));const r={title:"UI Components",description:"Vocdoni Chakra components"},i="UI Components with Chakra UI",s={unversionedId:"ui-components/index",id:"ui-components/index",title:"UI Components",description:"Vocdoni Chakra components",source:"@site/docs/ui-components/index.md",sourceDirName:"ui-components",slug:"/ui-components/",permalink:"/ui-components/",draft:!1,tags:[],version:"current",frontMatter:{title:"UI Components",description:"Vocdoni Chakra components"},sidebar:"defaultSidebar",previous:{title:"Quadratic voting",permalink:"/sdk/voting-types/quadratic"},next:{title:"Organization components",permalink:"/ui-components/Organization"}},l={},c=[{value:"Installing",id:"installing",level:2},{value:"Usage",id:"usage",level:2},{value:"Theming",id:"theming",level:2},{value:"Theming components",id:"theming-components",level:3},{value:"Styling via props",id:"styling-via-props",level:4},{value:"Theming complex multipart components",id:"theming-complex-multipart-components",level:4},{value:"i18n",id:"i18n",level:3},{value:"LICENSE",id:"license",level:2}],p={toc:c};function m(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ui-components-with-chakra-ui"},"UI Components with Chakra UI"),(0,a.kt)("p",null,"Chakra ui components for easily integrating Vocdoni services."),(0,a.kt)("h2",{id:"installing"},"Installing"),(0,a.kt)("p",null,"You'll first need to have a project with chakra installed and configured. Follow\ntheir ",(0,a.kt)("a",{parentName:"p",href:"https://chakra-ui.com/getting-started"},"official documentation")," in order to do so."),(0,a.kt)("p",null,"After that, you can add the required vocdoni components dependencies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @vocdoni/sdk @vocdoni/chakra-components react-markdown remark-gfm\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"The very first step is to add the ",(0,a.kt)("inlineCode",{parentName:"p"},"<ClientProvider />")," as a wrapper of your\napplication or, at least, of your election:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ClientProvider } from '@vocdoni/chakra-components'\n\nconst App = () => {\n  const signer = /* any ethers based signer */\n  return (\n    <ClientProvider env='stg' signer={signer}>\n      {/* your actual app code */}\n    </ClientProvider>\n  )\n}\n")),(0,a.kt)("p",null,"Note ",(0,a.kt)("inlineCode",{parentName:"p"},"env")," can be any of the ",(0,a.kt)("a",{parentName:"p",href:"/sdk/integration-details#environment"},"SDK available environments"),",\neither in string format, or using the SDK ",(0,a.kt)("inlineCode",{parentName:"p"},"EnvOptions")," enum."),(0,a.kt)("p",null,"After that, the easiest way to integrate a voting would be to just import the\n",(0,a.kt)("inlineCode",{parentName:"p"},"Election")," component and specify it an id for your election:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Election } from '@vocdoni/chakra-components'\n\nconst CustomVoteComponent = () => {\n  return <Election id='your-awesome-election-process-uid' />\n}\n")),(0,a.kt)("p",null,"This will automatically instance the Election Provider with all the available\nvoting components. You can style it following the ",(0,a.kt)("a",{parentName:"p",href:"#theming"},"instructions below"),",\nand/or you can also create your own vote view, based on the components used by\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"Election")," component, and style it directly with props:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import {\n  ElectionProvider,\n  ElectionTitle,\n  ElectionSchedule,\n  ElectionStatusBadge,\n  ElectionDescription,\n  HR,\n  ElectionQuestions,\n} from '@vocdoni/chakra-components'\n\nconst CustomVoteComponent = () => {\n  return (\n    <ElectionProvider id='your-awesome-election-process-uid'>\n      <ElectionHeader />\n      <ElectionTitle\n        p={5}\n        mt={6}\n        mb={8}\n        textColor='red'\n      />\n      <ElectionSchedule textTransform='uppercase' />\n      <ElectionStatusBadge variant='solid' colorScheme='teal' />\n      <ElectionDescription fontFamily='monospace' />\n      <HR />\n      <ElectionQuestions />\n    </ElectionProvider>\n  )\n}\n")),(0,a.kt)("p",null,"Take a look at section below on more examples of how to style the voting\ncomponents."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note you won't see some required styles if you have not added the\nChakraProvider to your project, see below for more details on this.")),(0,a.kt)("h2",{id:"theming"},"Theming"),(0,a.kt)("p",null,"Since these components use chakra's theming system, the way to style these\nvoting components is\n",(0,a.kt)("a",{parentName:"p",href:"https://chakra-ui.com/docs/styled-system/customize-theme#customizing-component-styles"},"the same as described in their documentation"),", but using the\ncustom components we defined (see ",(0,a.kt)("a",{parentName:"p",href:"#theming-components"},"theming components")," for more details)."),(0,a.kt)("p",null,"In order to start styling the voting components, you should use the\n",(0,a.kt)("inlineCode",{parentName:"p"},"ChakraProvider"),", and customize the passed theme:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// this can be imported from '@chakra-ui/react' too, but that's more generic\nimport { extendTheme } from '@chakra-ui/system'\nimport { theme } from '@vocdoni/chakra-components'\n\nexport const App = () => (\n  <ChakraProvider theme={extendTheme(theme)}>\n    {/* YOUR APP CONTENTS */}\n  </ChakraProvider>\n)\n")),(0,a.kt)("p",null,"As you can see, we're importing a custom defined theme from\n",(0,a.kt)("inlineCode",{parentName:"p"},"@vocdoni/chakra-components"),", but at the same time, we're using ",(0,a.kt)("inlineCode",{parentName:"p"},"extendTheme"),".\nThis is because we're not merging our styles with the base chakra theme, both to\navoid a bigger bundle size and to ensure we don't unexpectedly overwrite styles."),(0,a.kt)("p",null,"The above example is the easiest way to get all the default styles up and\nrunning, but you can always define your entire theme and ignore our base styles.\nSee how our components are grainly styled below, in ","[components structure]","."),(0,a.kt)("p",null,"In case you want to add the voting components to a page and ensure chakra-ui\nwill not affect your theme, you may need to pass ",(0,a.kt)("inlineCode",{parentName:"p"},"resetCSS={false}")," as a\ncomponent prop:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { extendTheme } from '@chakra-ui/system'\nimport { theme } from '@vocdoni/chakra-components'\n\nexport const App = () => (\n  <ChakraProvider resetCSS={false} theme={extendTheme(theme)}>\n    {/* YOUR APP CONTENTS */}\n  </ChakraProvider>\n)\n")),(0,a.kt)("p",null,"If you want to extend or change the theme, you can pass your changes as a second\nargument to ",(0,a.kt)("inlineCode",{parentName:"p"},"extendTheme"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { extendTheme } from '@chakra-ui/react'\nimport { theme as vtheme } from '@vocdoni/chakra-components'\n\nconst theme = extendTheme(vtheme, {\n  // any theme changes would go here\n  components: {\n    // [...]\n  },\n})\n\nexport const App = () => (\n  <ChakraProvider theme={theme}>\n    {/* YOUR APP CONTENTS */}\n  </ChakraProvider>\n)\n")),(0,a.kt)("p",null,"We have applied a few amount of styles, so you can perfectly ignore our styles\nand write them from the ground up."),(0,a.kt)("h3",{id:"theming-components"},"Theming components"),(0,a.kt)("p",null,"Since you have components for every part of an election process, you can follow\nthe official Chakra documentation on how to customize component styles, and just\nuse our components where required."),(0,a.kt)("p",null,"Here's a small example styling the title and image of elections:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { extendTheme, ComponentSingleStyleConfig } from '@chakra-ui/react'\nimport { theme as vtheme } from '@vocdoni/chakra-components'\n\nconst ElectionTitle : ComponentsStyleConfig = {\n  baseStyle: {\n    paddingTop: '.5em',\n    position: 'relative',\n    marginTop: '-2.5em',\n    background: 'linear-gradient(180deg, rgba(0,0,0,0.50) 0%, rgba(255,255,255,0) 100%)',\n  }\n}\n\nconst ElectionHeader : ComponentsStyleConfig = {\n  baseStyle: {\n    minHeight: '3em'\n  }\n}\n\nconst theme = extendTheme(vtheme, {\n  components: {\n    ElectionTitle,\n    ElectionHeader,\n  },\n})\n\n// this theme would then be used directly in your ChakraProvider instance\nexport default theme\n")),(0,a.kt)("h4",{id:"styling-via-props"},"Styling via props"),(0,a.kt)("p",null,"All components have all the features you would expect from a chakra component,\nmeaning you can style all components via component props too:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ElectionTitle, ElectionHeader } from '@vocdoni/chakra-components'\n\nconst App = () => (\n  <ElectionProvider id='an-election-id'>\n    <ElectionHeader\n      borderRadius=\"full\"\n      boxSize=\"100px\"\n\n      src=\"https://picsum.photos/200\"\n      alt=\"random image\"\n    />\n    <ElectionTitle\n      as='h2'\n      fontSize='50px'\n    />\n  </ElectionProvider>\n)\n")),(0,a.kt)("h4",{id:"theming-complex-multipart-components"},"Theming complex multipart components"),(0,a.kt)("p",null,"Some components, like ",(0,a.kt)("inlineCode",{parentName:"p"},"<ElectionQuestions />")," follow a multipart component\nstructure. Please refer to the\n",(0,a.kt)("a",{parentName:"p",href:"https://chakra-ui.com/docs/styled-system/component-style#styling-multipart-components"},"official chakra documentation")," for more info on how to\nstyle these type of components."),(0,a.kt)("p",null,"Here's a small example styling the ",(0,a.kt)("inlineCode",{parentName:"p"},"ElectionQuestions")," component:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { extendTheme, createMultiStyleConfigHelpers } from '@chakra-ui/react'\nimport { theme as vtheme, questionsAnatomy } from '@vocdoni/chakra-components'\n\nconst { defineMultiStyleConfig, definePartsStyle } = createMultiStyleConfigHelpers(questionsAnatomy)\n\nconst ElectionQuestions = defineMultiStyleConfig({\n  baseStyle: definePartsStyle({\n    title: {\n      color: 'lightblue',\n    },\n    description: {\n      color: 'lightgreen',\n    }\n  }),\n})\n\nconst theme = extendTheme(vtheme, {\n  components: {\n    ElectionQuestions,\n  },\n})\n\n// this theme would then be used directly in your ChakraProvider instance\nexport default theme\n")),(0,a.kt)("p",null,"You can check out each component's anatomy by checking\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/ui-components/tree/7e2f161be654b287ebc82d553c316164e20c8fd3/templates/chakra/src/theme"},"their theme files"),"."),(0,a.kt)("h3",{id:"i18n"},"i18n"),(0,a.kt)("p",null,"In order to change any of the texts contained in ",(0,a.kt)("inlineCode",{parentName:"p"},"@vocdoni/chakra-components"),",\nyou must specify the translations for each language in the ClientProvider:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const translationsObject = {\n  en: {\n    // all english translations\n  },\n  ca: {\n    // catalan translations\n  }\n}\n<ClientProvider translations={translationsObject} />\n")),(0,a.kt)("p",null,"Check out the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/ui-components/blob/7e2f161be654b287ebc82d553c316164e20c8fd3/packages/react-providers/src/i18n/localize.tsx"},"translations file")," in order to see all the available keys."),(0,a.kt)("h2",{id:"license"},"LICENSE"),(0,a.kt)("p",null,"This components library is licensed under the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/vocdoni/ui-components/blob/main/LICENSE"},"GNU Affero General Public License\nv3.0"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Vocdoni UI React Components\nCopyright (C) 2023 Vocdoni Roots MCU\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n")))}m.isMDXComponent=!0}}]);