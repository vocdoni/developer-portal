// Removes autogenerated API sidebar- this is broken.
function skipAPI (items) {
  return items.filter(({label}) => {
    return (
      // Exclude vocdoni-api folder, this folder needs swagger-generated sidebar
      label != 'vocdoni-api'
    )
  })
}

// Adds api sidebar items from './docs/vocdoni-api/sidebar.js', filters out index file
function addAPI (items) {
  // Define root api sidebar item
  const apiItem = {
    type: 'category',
    label: 'Vocdoni API',
    link: {
      type: 'doc',
      id: 'vocdoni-api/vocdoni-api'
    },
    items: []
  }
  // Get swagger-generated API sidebar items, filter out index doc
  require('./docs/vocdoni-api/sidebar.js').forEach(item => {
    if (item?.type !== 'doc' && item?.label !== 'Vocdoni API') {
      apiItem.items.push(item)
    }
  })
  items.push(apiItem)
  return items
}

function toTitleCase (str) {
  return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase()
}

function modifySDKReference (items) {
  for (var index1 in items) {
    if (
      items[index1].type == 'category' &&
      items[index1].label == 'Vocdoni SDK'
    ) {
      const SDKCategory = items[index1]
      for (var index2 in SDKCategory.items) {
        if (
          SDKCategory.items[index2]?.type == 'category' &&
          SDKCategory.items[index2]?.label == 'reference'
        ) {
          // Modify reference category title
          referenceCategory = {
            ...SDKCategory.items[index2],
            label: 'Reference'
          }
          // Move Changelog to the last item
          if (referenceCategory.items[0].id === 'sdk/reference/changelog') {
            changelogItem = referenceCategory.items[0]
            referenceCategory.items = referenceCategory.items.slice(1)
            referenceCategory.items.push(changelogItem)
          }
          for (var index3 in referenceCategory?.items) {
            // Capitalize category labels
            if (referenceCategory.items[index3].label != null) {
              referenceCategory.items[index3].label = toTitleCase(
                referenceCategory.items[index3].label
              )
            }
            // Capitalize modules label
            if (
              referenceCategory.items[index3].id === 'sdk/reference/modules'
            ) {
              referenceCategory.items[index3].label = 'Modules'
            }
          }
          SDKCategory.items[index2] = referenceCategory
        }
        items[index1] = SDKCategory
      }
    }
  }
  return items
}

module.exports = async function sidebarItemsGenerator ({
  defaultSidebarItemsGenerator,
  ...args
}) {
  const sidebarItems = await defaultSidebarItemsGenerator(args)
  return modifySDKReference(addAPI(skipAPI(sidebarItems)))
}
